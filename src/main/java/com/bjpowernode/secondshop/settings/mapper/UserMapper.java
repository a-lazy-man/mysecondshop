package com.bjpowernode.secondshop.settings.mapper;

import com.bjpowernode.secondshop.settings.domain.User;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Tue Jan 24 20:32:43 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Tue Jan 24 20:32:43 CST 2023
     */
    int insert(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Tue Jan 24 20:32:43 CST 2023
     */
    int insertSelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Tue Jan 24 20:32:43 CST 2023
     */
    User selectByPrimaryKey(@Param("id") String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Tue Jan 24 20:32:43 CST 2023
     */
    int updateByPrimaryKeySelective(User record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user
     *
     * @mbggenerated Tue Jan 24 20:32:43 CST 2023
     */
    int updateByPrimaryKey(User record);
    /**
     * 根据用户名以及密码查询用户
     * @param user
     * @return
     */
    User selectByUserEmailAndUserPwd(User user);

    /**
     * 用户注册
     * @param user
     * @return
     */
    int insertToUser(User user);

    /**
     * 根据用户id查询用户详细信息
     * @param userId
     * @return
     */
    User selectUserByUserId(@Param("userId") String userId);

    /**
     * 修改用户的信息
     * @param user
     * @return
     */
    int updateUserByConditions(User user);

    /**
     * 查询所有的用户
     * @return
     */
    List<User> selectAllUserForAdmin();

    /**
     * 删除用户
     * @param userId
     * @return
     */
    int deleteUserById(String userId);

    /**
     * 修改用户状态
     * @param map
     * @return
     */
    int updateUserState(Map<String,Object> map);


}